

<title>Place Autocomplete Address Form</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
    <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">
    <style>
      #locationField, #controls {
        position: relative;
        width: 100%;
      }
      #autocomplete {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 99%;
        border: none;
      }

    </style>
  </head>

  <body>
    <script>
    var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['establishment']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.

        // autocomplete.addListener('place_changed', fillForm);
        $(".location_button").on("click", function(event){
          event.preventDefault()
          var i = 0
          if ($("#fieldarray0").val() != "" && $("#fieldarray1").val() === ""){
            i = 1
          }
          if ($("#fieldarray0").val() != "" && $("#fieldarray1").val() != ""){
            i = 2
          }
          var place = autocomplete.getPlace();
          var num = i
          var n = num.toString();
        $("#fieldarray" + i).val(place.name + "," + place.formatted_address)
        $("#autocomplete").val("")
})

        }

      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_API_KEY"] %>&libraries=places&callback=initAutocomplete"
        async defer></script>




<div class="container">

  <% questions_array = ["location", "date", "time"] %>
  <% counter = 0 %>
    <div class="card-panel teal">
  <%= form_for @poll do |f|%>
  <% @poll_array.each do |poll| %>
 <h5> <%= questions_array[counter]%> </h5>

    <% if counter == 0 %>
    <div id="locationField">
      <textarea id="autocomplete" placeholder="Enter your address"
             onFocus="geolocate()" type="text"></textarea>
    </div>
    <br>
    <br>
    <button class="location_button">Add Location</button>
    <br>
      <%= fields_for 'poll_array[]', poll do |p| %>
     <%= p.hidden_field :question, value: 'location' %><br>

        <% j = 0 %>
        <%= p.fields_for :choices do |choices_form| %>
        <% field_array = ["fieldarray0","fieldarray1","fieldarray2"] %>
              <%= choices_form.label :option %>
              <%= choices_form.text_field :title, id: field_array[j]%><br>
              <% j += 1 %>
             <% end %>
    <% end %>
<br><br><br>

    <% else %>

      <%= fields_for 'poll_array[]', poll do |p| %>
     <%=p.hidden_field :question, value: 'location' %><br>

            <%= p.fields_for :choices do |choices_form| %>
              <%= choices_form.label :option %>
              <%= choices_form.text_field :title %><br>
            <% end %>
      <% end %>
    <% end %>
    <%  counter += 1 %>
  <% end %>
    <%= f.submit "Submit Poll!",:class => "waves-effect purple lighten-1 btn" %>
</div>
  <% end %>
</div>
